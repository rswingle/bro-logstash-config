input {
  file {
    path => [ "/path/to/bro/current/capture_loss.log" ] # array (required)
    type => "bro_capture_loss" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/conn.log" ] # array (required)
    type => "bro_conn" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/conn_long.log" ] # array (required)
    type => "bro_conn_long" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/dhcp.log" ] # array (required)
    type => "bro_dhcp" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/dns.log" ] # array (required)
    type => "bro_dns" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/files.log" ] # array (required)
    type => "bro_files" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/http.log" ] # array (required)
    type => "bro_http" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/kerberos.log" ] # array (required)
    type => "bro_kerberos" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/known_services.log" ] # array (required)
    type => "bro_known_services" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/notice.log" ] # array (required)
    type => "bro_notice" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/ntlm.log" ] # array (required)
    type => "bro_ntlm" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/pe.log" ] # array (required)
    type => "bro_pe" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/radius.log" ] # array (required)
    type => "bro_radius" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/reporter.log" ] # array (required)
    type => "bro_reporter" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/sip.log" ] # array (required)
    type => "bro_sip" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/snmp.log" ] # array (required)
    type => "bro_snmp" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/ssl.log" ] # array (required)
    type => "bro_ssl" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/stats.log" ] # array (required)
    type => "bro_stats" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/weird.log" ] # array (required)
    type => "bro_weird" # string (optional)
  }
}

input {
  file {
    path => [ "/path/to/bro/current/x509.log" ] # array (required)
    type => "bro_x509" # string (optional)
  }
}

filter{
  grok {
    type => "bro_capture_loss"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROCAPTURE_LOSS}"
    add_tag => "brocapture_loss"
  }
}

filter{
  grok {
    type => "bro_conn"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROCONN}"
    add_tag => "broconn"
  }
}

filter{
  grok {
    type => "bro_conn_long"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROCONN_LONG}"
    add_tag => "broconn_long"
  }
}

filter{
  grok {
    type => "bro_dhcp"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BRODHCP}"
    add_tag => "brodhcp"
  }
}

filter{
  grok {
    type => "bro_dns"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BRODNS}"
    add_tag => "brodns"
  }
}

filter{
  grok {
    type => "bro_files"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROFILES}"
    add_tag => "brofiles"
  }
}

filter{
  grok {
    type => "bro_http"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROHTTP}"
    add_tag => "brohttp"
  }
}

filter{
  grok {
    type => "bro_kerberos"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROKERBEROS}"
    add_tag => "brokerberos"
  }
}

filter{
  grok {
    type => "bro_known_services"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROKNOWN_SERVICES}"
    add_tag => "broknown_services"
  }
}

filter{
  grok {
    type => "bro_notice"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BRONOTICE}"
    add_tag => "bronotice"
  }
}

filter{
  grok {
    type => "bro_ntlm"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BRONTLM}"
    add_tag => "brontlm"
  }
}

filter{
  grok {
    type => "bro_pe"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROPE}"
    add_tag => "brope"
  }
}

filter{
  grok {
    type => "bro_radius"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BRORADIUS}"
    add_tag => "broradius"
  }
}

filter{
  grok {
    type => "bro_reporter"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROREPORTER}"
    add_tag => "broreporter"
  }
}

filter{
  grok {
    type => "bro_sip"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROSIP}"
    add_tag => "brosip"
  }
}

filter{
  grok {
    type => "bro_snmp"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROSNMP}"
    add_tag => "brosnmp"
  }
}

filter{
  grok {
    type => "bro_ssl"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROSSL}"
    add_tag => "brossl"
  }
}

filter{
  grok {
    type => "bro_stats"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROSTATS}"
    add_tag => "brostats"
  }
}

filter{
  grok {
    type => "bro_weird"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROWEIRD}"
    add_tag => "broweird"
  }
}

filter{
  grok {
    type => "bro_x509"
    patterns_dir => "/opt/logstash/patterns"
    break_on_match => false
    pattern => "%{BROX509}"
    add_tag => "brox509"
  }
}
	

output {
  elasticsearch {
    host => localhost
    cluster => "elasticsearch "
  }
}